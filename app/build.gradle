apply plugin: 'com.android.application'

android {
    compileSdkVersion       rootProject.ext.android.compileSdkVersion
    buildToolsVersion       rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId       rootProject.ext.android.applicationId
        minSdkVersion       rootProject.ext.android.minSdkVersion
        targetSdkVersion    rootProject.ext.android.targetSdkVersion
        versionCode         rootProject.ext.android.versionCode
        versionName         rootProject.ext.android.versionName
        testInstrumentationRunner   rootProject.ext.android.testInstrumentationRunner
        flavorDimensions "versionCode"
        multiDexEnabled true
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
        vectorDrawables.useSupportLibrary = true
        //阿里路由框架配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }
    signingConfigs {
        release {
            keyAlias '123123'
            keyPassword '123123'
            storeFile file('123123.jks')
            storePassword '123123'
        }
    }
    buildTypes {
        release {
            // true - 打开混淆
            minifyEnabled true
            // true - 打开资源压缩
            shrinkResources true
            //Zipalign优化
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "${variant.productFlavors[0].name}_${defaultConfig.versionName}.apk"
                }
            }
        }
    }
    dexOptions {
        javaMaxHeapSize "2g"
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            if (isBuildModule.toBoolean()) {
                //独立运行
                manifest.srcFile 'src/main/alone/AndroidManifest.xml'
            } else {
                //合并到宿主
                manifest.srcFile 'src/main/AndroidManifest.xml'
                resources {
                    //正式版本时，排除debug文件夹下所有调试文件
                    exclude 'src/debug/*'
                }
            }
        }
    }
    //导入dataBinding支持
    dataBinding {
        enabled true
    }

    productFlavors {
        mingzi { buildConfigField "String", "ENVIRONMENT", '"baidu"' }//BuildConfig.ENVIRONMENT

    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    compile rootProject.ext.support["multidex"]

        implementation project(':moduleCore:module-main')
        implementation project(':moduleCore:module-login')
        implementation project(':moduleCore:module-hfive')

}
